use clap::{command, Arg, ArgAction, ArgMatches, Command};

pub fn parse_cli() -> ArgMatches {
    command!()
        .version(clap::crate_version!())
        .subcommand_negates_reqs(true)
        .propagate_version(true)
        .arg_required_else_help(true)
        .args_conflicts_with_subcommands(true)
        .term_width(80)
        .arg(Arg::new("server")
            .help("The short name of a configured server or a bare address including port, in which case the password will be read from the environment (RCONC_SERVER_PASSWORD) or stdin")
            .required(true))
        .arg(Arg::new("command")
            .help("The command to execute (multiple arguments will be executed as one command separated by spaces)")
            .required(true)
            .action(ArgAction::Append))
        .subcommand(Command::new("server")
            .about("Manage the list of servers")
            .subcommand_required(true)
            .propagate_version(true)
            .term_width(80)
            .subcommand(Command::new("add")
                .about("Add a new server")
                .arg(Arg::new("name")
                    .help("A short name for the server")
                    .required(true))
                .arg(Arg::new("address")
                    .help("The host or ip and port of the rcon server")
                    .required(true))
                .arg(Arg::new("password")
                    .help("The rcon password or - to read it from the environment (RCONC_SERVER_PASSWORD) or stdin")
                    .required(true)))
            .subcommand(Command::new("remove")
                .about("Remove a server")
                .arg(Arg::new("name")
                    .help("The short name of the server")
                    .required(true)))
            .subcommand(Command::new("list")
                .about("List all configured servers")
                .arg(Arg::new("show-passwords")
                    .long("show-passwords")
                    .help("Include passwords in the listing"))))
        .get_matches()
}
